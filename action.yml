name: "Releaser"
description: "Create a release"

inputs:
  # by conflicting inputs -> lowest priority wins
  mode: # minor/major/pre
    description: "The type of release to create"
    required: true
  prerelease: # true/false
    description: "Whether the release is a prerelease"
    required: true
  tag_format: # must include {Maj}, {Min}, {Pre}; the text enclosed by [] and including the {Pre} will only be used if it is a prerelease (optional). 
    description: "The format of the tag"
    default: "V{Maj}.{Min}[_pre-{Pre}]"
  reuse_old_body: # true/false; priority: 0
    description: "Whether to reuse the old release body"
    default: "true"
  body_path: # str; priority: 1
    description: "The path to the file containing the release body"
    default: ""
  body: # str; priority: 2
    description: "The release body"
    default: ""

runs:
  using: "composite"
  steps:
    - name: execute python script
      shell: bash
      run: |
        python -u "${{ github.action_path }}/src/releaser.py"
      env:
        GITHUB_TOKEN: ${{ github.token }}
        WORK_PATH: ${{ github.workspace }}
        REPOSITORY: ${{ github.repository }}
        INPUT_MODE: ${{ inputs.mode }}
        INPUT_PRERELEASE: ${{ inputs.prerelease }}
        INPUT_TAG_FORMAT: ${{ inputs.tag_format }}
        INPUT_REUSE_OLD_BODY: ${{ inputs.reuse_old_body }}
        INPUT_BODY_PATH: ${{ inputs.body_path }}
        INPUT_BODY: ${{ inputs.body }}

    # - shell: bash
    #   run: |
    #     echo $s_release_tag
    #     echo $s_release_title
    #     echo $s_release_body_path

    - name: Create Release
      uses: softprops/action-gh-release@v2.0.6
      with:
        draft: ${{ true }}
        prerelease: ${{ inputs.prerelease }}
        body_path: ${{ env.s_release_body_path }}
        name: ${{ env.s_release_title }}
        tag_name: ${{ env.s_release_tag }}
        make_latest: ${{ true }}

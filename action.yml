name: 'Releaser'
description: 'Create a release'
inputs:
  mode: # minor/major/pre
    required: true
  prerelease:  # true/false
    required: true
runs:
  using: "composite"
  steps:
    - name: setup env
      shell: bash
      run: |
        echo "GITHUB_TOKEN=${{ github.token }}" >> $GITHUB_ENV
        echo "WORK_PATH=${{ github.workspace }}" >> $GITHUB_ENV
        echo "BODY_PATH=${{ github.workspace }}/releaser/body.txt" >> $GITHUB_ENV
        echo "PRERELEASE=${{ inputs.prerelease }}" >> $GITHUB_ENV
        echo "MODE=${{ inputs.mode }}" >> $GITHUB_ENV
    - name: handle inputs
      shell: bash
      run: |
        python -u "${{ github.action_path }}/src/handle_inputs.py"
    - name: get last release informaton
      shell: bash
      run: |
        python -u '${{ github.action_path }}/src/get_last_release_information.py'
    - name: generate new release information
      shell: bash
      run: |
        python -u '${{ github.action_path }}/src/generate_new_release_information.py'
    - shell: bash
      run: |
        echo $WORK_PATH
        echo $INPUT_MODE
        echo $INPUT_PRERELEASE
        echo $OLD_RELEASE_BODY
        echo $OLD_RELEASE_URL
        echo $OLD_RELEASE_TAG
        echo $NEW_RELEASE_TAG
        echo $NEW_RELEASE_TITLE
    - name: Create Release
      uses: softprops/action-gh-release@v2.0.6
      with:
        draft: ${{ false }}
        prerelease: ${{ env.INPUT_PRERELEASE }}
        body_path: ${{ env.BODY_PATH }}
        name: ${{ env.NEW_RELEASE_TITLE }}
        tag_name: ${{ env.NEW_RELEASE_TAG }}
        make_latest: ${{ true }}
